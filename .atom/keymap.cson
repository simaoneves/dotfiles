# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on OS X and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * https://atom.io/docs/latest/hacking-atom-debugging#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

# change comment operator binding
'atom-text-editor.vim-mode-plus:not(.insert-mode)':
    'รง c': 'vim-mode-plus:toggle-line-comments'
    'alt-j': 'editor:move-line-down'
    'alt-k': 'editor:move-line-up'
    'p': 'vim-mode-plus:put-after-with-auto-indent'
    'P': 'vim-mode-plus:put-before-with-auto-indent'
    # Find word in project
    '?': 'project-find:search-under-cursor'

'atom-text-editor.vim-mode-plus.normal-mode':
    'รง s': 'vim-mode-plus:surround'
    'รง s w': 'vim-mode-plus:surround-word'
    'รง m s':  'vim-mode-plus:map-surround'
    # 'd s': 'vim-mode-plus:delete-surround'
    'd s': 'vim-mode-plus:delete-surround-any-pair'
    # 'c s': 'vim-mode-plus:change-surround'
    'c s': 'vim-mode-plus:change-surround-any-pair'
    'cmd-shift-r': 'test-status:run-tests'
    'ctrl-s': 'vim-mode-plus:sort'
    'ctrl-p': 'vim-mode-plus:replace-with-register'
    'enter': 'editor:newline-below'
    'shift-enter': 'editor:newline-above',
    '-': 'toggle:there'
    'ctrl-i': 'cursor-history:next-within-editor'
    'ctrl-o': 'cursor-history:prev-within-editor'
    'ctrl-r': 'mocha-test-runner:run'

# Fix weird behaviour with Ctrl-k, since it is used as a prefix?
'atom-text-editor':
    'ctrl-k': 'unset!'

# Ctrl-* to change panes
'body':
    'ctrl-h': 'pane:show-previous-item'
    'ctrl-l': 'pane:show-next-item'

# Go up and down in fuzzy-finder
'.fuzzy-finder':
    'ctrl-j': 'core:move-down'
    'ctrl-k': 'core:move-up'

# Go up and down in symbols-view
'.symbols-view':
    'ctrl-j': 'core:move-down'
    'ctrl-k': 'core:move-up'

# Move up and down in autocomplete-plus
'body atom-text-editor.autocomplete-active':
    'ctrl-k': 'autocomplete-plus:move-up'
    'ctrl-j': 'autocomplete-plus:move-down'

# Cmd-s also escapes from insert-mode
